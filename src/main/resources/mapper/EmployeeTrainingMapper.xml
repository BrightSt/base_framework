<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xqls.common.dao.EmployeeTrainingMapper">
  <resultMap id="BaseResultMap" type="com.xqls.common.entity.EmployeeTraining">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="qualification_no" jdbcType="VARCHAR" property="qualificationNo" />
    <result column="grant_organize" jdbcType="VARCHAR" property="grantOrganize" />
    <result column="attendance_record" jdbcType="VARCHAR" property="attendanceRecord" />
    <result column="materials" jdbcType="VARCHAR" property="materials" />
    <result column="examine_materials" jdbcType="VARCHAR" property="examineMaterials" />
    <result column="qualification_start" jdbcType="TIMESTAMP" property="qualificationStart" />
    <result column="qualification_long" jdbcType="INTEGER" property="qualificationLong" />
    <result column="ci_code" jdbcType="VARCHAR" property="ciCode" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, gender, age, card_no, qualification_no, grant_organize, attendance_record, 
    materials, examine_materials, qualification_start, qualification_long, ci_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    ,DATE_FORMAT(qualification_start,'%Y-%m-%d') AS qualificationStartStr
    from employee_training
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee_training
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xqls.common.entity.EmployeeTraining">
    insert into employee_training (id, name, gender, 
      age, card_no, qualification_no, 
      grant_organize, attendance_record, materials, 
      examine_materials, qualification_start, 
      qualification_long, ci_code)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{age,jdbcType=INTEGER}, #{cardNo,jdbcType=VARCHAR}, #{qualificationNo,jdbcType=VARCHAR}, 
      #{grantOrganize,jdbcType=VARCHAR}, #{attendanceRecord,jdbcType=VARCHAR}, #{materials,jdbcType=VARCHAR}, 
      #{examineMaterials,jdbcType=VARCHAR}, #{qualificationStart,jdbcType=TIMESTAMP}, 
      #{qualificationLong,jdbcType=INTEGER}, #{ciCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xqls.common.entity.EmployeeTraining">
    insert into employee_training
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="cardNo != null">
        card_no,
      </if>
      <if test="qualificationNo != null">
        qualification_no,
      </if>
      <if test="grantOrganize != null">
        grant_organize,
      </if>
      <if test="attendanceRecord != null">
        attendance_record,
      </if>
      <if test="materials != null">
        materials,
      </if>
      <if test="examineMaterials != null">
        examine_materials,
      </if>
      <if test="qualificationStart != null">
        qualification_start,
      </if>
      <if test="qualificationLong != null">
        qualification_long,
      </if>
      <if test="ciCode != null">
        ci_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="qualificationNo != null">
        #{qualificationNo,jdbcType=VARCHAR},
      </if>
      <if test="grantOrganize != null">
        #{grantOrganize,jdbcType=VARCHAR},
      </if>
      <if test="attendanceRecord != null">
        #{attendanceRecord,jdbcType=VARCHAR},
      </if>
      <if test="materials != null">
        #{materials,jdbcType=VARCHAR},
      </if>
      <if test="examineMaterials != null">
        #{examineMaterials,jdbcType=VARCHAR},
      </if>
      <if test="qualificationStart != null">
        #{qualificationStart,jdbcType=TIMESTAMP},
      </if>
      <if test="qualificationLong != null">
        #{qualificationLong,jdbcType=INTEGER},
      </if>
      <if test="ciCode != null">
        #{ciCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xqls.common.entity.EmployeeTraining">
    update employee_training
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="cardNo != null">
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="qualificationNo != null">
        qualification_no = #{qualificationNo,jdbcType=VARCHAR},
      </if>
      <if test="grantOrganize != null">
        grant_organize = #{grantOrganize,jdbcType=VARCHAR},
      </if>
      <if test="attendanceRecord != null">
        attendance_record = #{attendanceRecord,jdbcType=VARCHAR},
      </if>
      <if test="materials != null">
        materials = #{materials,jdbcType=VARCHAR},
      </if>
      <if test="examineMaterials != null">
        examine_materials = #{examineMaterials,jdbcType=VARCHAR},
      </if>
      <if test="qualificationStart != null">
        qualification_start = #{qualificationStart,jdbcType=TIMESTAMP},
      </if>
      <if test="qualificationLong != null">
        qualification_long = #{qualificationLong,jdbcType=INTEGER},
      </if>
      <if test="ciCode != null">
        ci_code = #{ciCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xqls.common.entity.EmployeeTraining">
    update employee_training
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      card_no = #{cardNo,jdbcType=VARCHAR},
      qualification_no = #{qualificationNo,jdbcType=VARCHAR},
      grant_organize = #{grantOrganize,jdbcType=VARCHAR},
      attendance_record = #{attendanceRecord,jdbcType=VARCHAR},
      materials = #{materials,jdbcType=VARCHAR},
      examine_materials = #{examineMaterials,jdbcType=VARCHAR},
      qualification_start = #{qualificationStart,jdbcType=TIMESTAMP},
      qualification_long = #{qualificationLong,jdbcType=INTEGER},
      ci_code = #{ciCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="all" parameterType="com.xqls.common.entity.EmployeeTraining" resultMap="BaseResultMap">
  	select et.* ,DATE_FORMAT(et.qualification_start,'%Y-%m-%d') AS qualificationStartStr from employee_training et
  	where 1=1 
  	<if test="ciCode != null">
  		and et.ci_code = #{ciCode}
  	</if>
  	<if test="name != null">
  		and et.name like concat('%',#{name},'%')
  	</if>
  </select>
</mapper>